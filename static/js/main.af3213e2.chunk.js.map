{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","param","this","newSortType","newIsReversed","ALPHABET","LENGTH","setState","visibleGoods","sort","a","b","localeCompare","length","reverse","isSortedAlphabetically","isSortedByLength","className","type","onClick","getReorderedGoods","map","listElem","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,uDAME,SAAkBC,GAChB,MAAiCC,KAAKL,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAEdG,EAAcL,EACdM,EAAgBJ,EAEN,iBAAVC,IACFE,EAAcT,EAASW,SACvBD,GAAgB,GAGJ,WAAVH,IACFE,EAAcT,EAASY,OACvBF,GAAgB,GAGJ,YAAVH,IACFG,GAAiBJ,EACjBG,EAAcT,EAASY,QAGX,UAAVL,IACFE,EAAcT,EAASK,KACvBK,GAAgB,GAGlBF,KAAKK,SAAS,CACZT,SAAUK,EACVH,WAAYI,MAlClB,oBAsCE,WAAU,IAAD,OACP,EAAiCF,KAAKL,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACdQ,EAAY,UAAOb,GAEnBG,IAAaJ,EAASW,WACxBG,EAAeA,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OAGzDb,IAAaJ,EAASY,SACxBE,EAAeA,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,WAGtDb,IACFQ,EAAeA,EAAaM,WAG9B,IAAMC,EAAyBjB,IAAaJ,EAASW,SAC/CW,EAAmBlB,IAAaJ,EAASY,OAE/C,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,wBAAmBF,EAAyB,GAAK,aAC1DI,QAAS,kBAAM,EAAKC,kBAAkB,iBAHxC,iCAQA,wBACEF,KAAK,SACLD,UAAS,2BAAsBD,EAAmB,GAAK,aACvDG,QAAS,kBAAM,EAAKC,kBAAkB,WAHxC,4BAQA,wBACEF,KAAK,SACLD,UAAS,2BAAsBjB,EAAa,GAAK,aACjDmB,QAAS,kBAAM,EAAKC,kBAAkB,YAHxC,qBAQEtB,EAAW,GACX,wBACEoB,KAAK,SACLD,UAAU,mBACVE,QAAS,kBAAM,EAAKC,kBAAkB,UAHxC,sBAUJ,6BACGZ,EAAaa,KAAI,SAACC,GAAD,OAChB,6BAAoBA,GAAXA,eAjGrB,GAAyBC,IAAMC,WCzB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af3213e2.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  getReorderedGoods(param: string) {\n    const { sortType, isReversed } = this.state;\n\n    let newSortType = sortType;\n    let newIsReversed = isReversed;\n\n    if (param === 'alphabetical') {\n      newSortType = SortType.ALPHABET;\n      newIsReversed = false;\n    }\n\n    if (param === 'length') {\n      newSortType = SortType.LENGTH;\n      newIsReversed = false;\n    }\n\n    if (param === 'reverse') {\n      newIsReversed = !isReversed;\n      newSortType = SortType.LENGTH;\n    }\n\n    if (param === 'reset') {\n      newSortType = SortType.NONE;\n      newIsReversed = false;\n    }\n\n    this.setState({\n      sortType: newSortType,\n      isReversed: newIsReversed,\n    });\n  }\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    let visibleGoods = [...goodsFromServer];\n\n    if (sortType === SortType.ALPHABET) {\n      visibleGoods = visibleGoods.sort((a, b) => a.localeCompare(b));\n    }\n\n    if (sortType === SortType.LENGTH) {\n      visibleGoods = visibleGoods.sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      visibleGoods = visibleGoods.reverse();\n    }\n\n    const isSortedAlphabetically = sortType === SortType.ALPHABET;\n    const isSortedByLength = sortType === SortType.LENGTH;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info${isSortedAlphabetically ? '' : ' is-light'}`}\n            onClick={() => this.getReorderedGoods('alphabetical')}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success${isSortedByLength ? '' : ' is-light'}`}\n            onClick={() => this.getReorderedGoods('length')}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning${isReversed ? '' : ' is-light'}`}\n            onClick={() => this.getReorderedGoods('reverse')}\n          >\n            Reverse\n          </button>\n\n          { sortType > 0 && (\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={() => this.getReorderedGoods('reset')}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map((listElem) => (\n            <li key={listElem}>{listElem}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}