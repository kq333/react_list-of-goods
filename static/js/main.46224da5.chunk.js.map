{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","copyArrayList","isReversed","sortType","NONE","param","this","setState","prevState","sort","a","b","localeCompare","ALPHABET","length","LENGTH","reverse","AlpabetClassName","lengthClassName","reverseClassName","className","type","onClick","getReorderedGoods","map","ListElem","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAYE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,cAAc,GAAD,OAAMH,GACnBI,YAAY,EACZC,SAAUN,EAASO,MAJvB,uDAOE,SAAkBC,GACF,iBAAVA,GACFC,KAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BP,cAAeO,EAAUP,cACtBQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAClCR,SAAUN,EAASgB,aAIT,WAAVR,GACFC,KAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BP,cAAeO,EAAUP,cACtBQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAC/BX,SAAUN,EAASkB,WAIT,YAAVV,GACFC,KAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BP,cAAeO,EAAUP,cAAce,UACvCd,YAAY,MAMF,UAAVG,GACFC,KAAKC,SAAS,CACZN,cAAc,GAAD,OAAMH,GACnBI,YAAY,EACZC,SAAUN,EAASO,SArC3B,oBA0CE,WAAU,IAAD,OACP,EAAgDE,KAAKN,MAA7CC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,SAE7Bc,EACU,IAAbd,IAAmBD,GAA6B,IAAbC,GAAkBD,EACpD,iBACA,0BAEEgB,EACU,IAAbf,IAAmBD,GAA6B,IAAbC,GAAkBD,EACpD,oBACA,6BAEEiB,EAAmBjB,EACrB,oBACA,6BAEJ,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWH,EACXK,QAAS,kBAAM,EAAKC,kBAAkB,iBAHxC,iCAQA,wBACEF,KAAK,SACLD,UAAWF,EACXI,QAAS,kBAAM,EAAKC,kBAAkB,WAHxC,4BAQA,wBACEF,KAAK,SACLD,UAAWD,EACXG,QAAS,kBAAM,EAAKC,kBAAkB,YAHxC,qBAQCrB,GACC,wBACEmB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAM,EAAKC,kBAAkB,UAHxC,sBAUJ,6BACGtB,EAAcuB,KAAI,SAACC,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SAAmCA,GAAXA,eAnGpC,GAAyBC,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.46224da5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  copyArrayList: string[],\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    copyArrayList: [...goodsFromServer],\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  getReorderedGoods(param: string) {\n    if (param === 'alphabetical') {\n      this.setState((prevState) => ({\n        copyArrayList: prevState.copyArrayList\n          .sort((a, b) => a.localeCompare(b)),\n        sortType: SortType.ALPHABET,\n      }));\n    }\n\n    if (param === 'length') {\n      this.setState((prevState) => ({\n        copyArrayList: prevState.copyArrayList\n          .sort((a, b) => a.length - b.length),\n        sortType: SortType.LENGTH,\n      }));\n    }\n\n    if (param === 'reverse') {\n      this.setState((prevState) => ({\n        copyArrayList: prevState.copyArrayList.reverse(),\n        isReversed: true,\n\n        /* sortType: SortType.NONE, */\n      }));\n    }\n\n    if (param === 'reset') {\n      this.setState({\n        copyArrayList: [...goodsFromServer],\n        isReversed: false,\n        sortType: SortType.NONE,\n      });\n    }\n  }\n\n  render() {\n    const { copyArrayList, isReversed, sortType } = this.state;\n\n    const AlpabetClassName\n    = (sortType === 1 && !isReversed) || (sortType === 1 && isReversed)\n      ? 'button is-info'\n      : 'button is-info is-light';\n\n    const lengthClassName\n    = (sortType === 2 && !isReversed) || (sortType === 2 && isReversed)\n      ? 'button is-success'\n      : 'button is-success is-light';\n\n    const reverseClassName = isReversed\n      ? 'button is-warning'\n      : 'button is-warning is-light';\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={AlpabetClassName}\n            onClick={() => this.getReorderedGoods('alphabetical')}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={lengthClassName}\n            onClick={() => this.getReorderedGoods('length')}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={reverseClassName}\n            onClick={() => this.getReorderedGoods('reverse')}\n          >\n            Reverse\n          </button>\n\n          {isReversed && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.getReorderedGoods('reset')}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {copyArrayList.map((ListElem) => (\n            <li data-cy=\"Good\" key={ListElem}>{ListElem}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}