{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","copyArrayList","isReversed","sortType","NONE","param","sortedArray","this","slice","sort","a","b","localeCompare","setState","ALPHABET","length","LENGTH","reverse","prevState","AlpabetClassName","lengthClassName","reverseClassName","className","type","onClick","getReorderedGoods","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAYE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,cAAc,GAAD,OAAMH,GACnBI,YAAY,EACZC,SAAUN,EAASO,MAJvB,uDAOE,SAAkBC,GAAgB,IAC5BC,EAD2B,OAG/B,OAAQD,GACN,IAAK,eACHC,EAAcC,KAAKP,MAAMC,cACtBO,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAW,EAAKX,MAAME,WAChCS,EAAEC,cAAcF,GAChBA,EAAEE,cAAcD,MACtBJ,KAAKM,SAAS,CACZZ,cAAeK,EACfH,SAAUN,EAASiB,WAErB,MACF,IAAK,SACHR,EAAcC,KAAKP,MAAMC,cACtBO,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAW,EAAKX,MAAME,WAChCS,EAAEI,OAASL,EAAEK,OACbL,EAAEK,OAASJ,EAAEI,UACnBR,KAAKM,SAAS,CACZZ,cAAeK,EACfH,SAAUN,EAASmB,SAErB,MACF,IAAK,UACHV,EAAcC,KAAKP,MAAMC,cAAcO,QAAQS,UAC/CV,KAAKM,UAAS,SAACK,GAAD,MAAgB,CAC5BjB,cAAeK,EACfJ,YAAagB,EAAUhB,eAEzB,MACF,IAAK,QACHI,EAAcR,EAAgBU,QAC9BD,KAAKM,SAAS,CACZZ,cAAeK,EACfJ,YAAY,EACZC,SAAUN,EAASO,OAErB,MACF,QACEE,EAAcC,KAAKP,MAAMC,cAAcO,WA/C/C,oBAmDE,WAAU,IAAD,OACP,EAAgDD,KAAKP,MAA7CC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,SAE7BgB,EACU,IAAbhB,IAAmBD,GAA6B,IAAbC,GAAkBD,EACpD,iBACA,0BAEEkB,EACU,IAAbjB,IAAmBD,GAA6B,IAAbC,GAAkBD,EACpD,oBACA,6BAEEmB,EAAmBnB,EACrB,oBACA,6BAEJ,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWH,EACXK,QAAS,kBAAM,EAAKC,kBAAkB,iBAHxC,iCAQA,wBACEF,KAAK,SACLD,UAAWF,EACXI,QAAS,kBAAM,EAAKC,kBAAkB,WAHxC,4BAQA,wBACEF,KAAK,SACLD,UAAWD,EACXG,QAAS,kBAAM,EAAKC,kBAAkB,YAHxC,sBAQEvB,GAAcC,IAAaN,EAASO,OACpC,wBACEmB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAM,EAAKC,kBAAkB,UAHxC,sBAUJ,6BACGxB,EAAcyB,KAAI,SAACC,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eA5GpC,GAAyBC,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ca7d28b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  copyArrayList: string[],\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    copyArrayList: [...goodsFromServer],\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  getReorderedGoods(param: string) {\n    let sortedArray: string[];\n\n    switch (param) {\n      case 'alphabetical':\n        sortedArray = this.state.copyArrayList\n          .slice().sort((a, b) => (this.state.isReversed\n            ? b.localeCompare(a)\n            : a.localeCompare(b)));\n        this.setState({\n          copyArrayList: sortedArray,\n          sortType: SortType.ALPHABET,\n        });\n        break;\n      case 'length':\n        sortedArray = this.state.copyArrayList\n          .slice().sort((a, b) => (this.state.isReversed\n            ? b.length - a.length\n            : a.length - b.length));\n        this.setState({\n          copyArrayList: sortedArray,\n          sortType: SortType.LENGTH,\n        });\n        break;\n      case 'reverse':\n        sortedArray = this.state.copyArrayList.slice().reverse();\n        this.setState((prevState) => ({\n          copyArrayList: sortedArray,\n          isReversed: !prevState.isReversed,\n        }));\n        break;\n      case 'reset':\n        sortedArray = goodsFromServer.slice();\n        this.setState({\n          copyArrayList: sortedArray,\n          isReversed: false,\n          sortType: SortType.NONE,\n        });\n        break;\n      default:\n        sortedArray = this.state.copyArrayList.slice();\n    }\n  }\n\n  render() {\n    const { copyArrayList, isReversed, sortType } = this.state;\n\n    const AlpabetClassName\n    = (sortType === 1 && !isReversed) || (sortType === 1 && isReversed)\n      ? 'button is-info'\n      : 'button is-info is-light';\n\n    const lengthClassName\n    = (sortType === 2 && !isReversed) || (sortType === 2 && isReversed)\n      ? 'button is-success'\n      : 'button is-success is-light';\n\n    const reverseClassName = isReversed\n      ? 'button is-warning'\n      : 'button is-warning is-light';\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={AlpabetClassName}\n            onClick={() => this.getReorderedGoods('alphabetical')}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={lengthClassName}\n            onClick={() => this.getReorderedGoods('length')}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={reverseClassName}\n            onClick={() => this.getReorderedGoods('reverse')}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.getReorderedGoods('reset')}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {copyArrayList.map((good) => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}